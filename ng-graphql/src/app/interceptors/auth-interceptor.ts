import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from "@angular/common/http";
import { Injectable } from "@angular/core";
import { Observable } from "rxjs";

@Injectable()
export class AuthInterceptor implements HttpInterceptor {

    private readonly _token: string = 'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjU1MjZFOTU5RTYzOEE5NjNFMDY4NTJBQ0RFNTNEQjY0OEJEMzhBNDVSUzI1NiIsIng1dCI6IlZTYnBXZVk0cVdQZ2FGS3MzbFBiWkl2VGlrVSIsInR5cCI6ImF0K2p3dCJ9.eyJpc3MiOiJodHRwczovL2xvY2FsaG9zdC9hdXRoIiwibmJmIjoxNzQ2MDM1NTczLCJpYXQiOjE3NDYwMzU1NzMsImV4cCI6MTc0ODYyNzU3MywiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjpbIkFGREVNUyBBZG1pbiIsIkFGRVJCIFNwZWNpYWwgUHJvZ3JhbSBNYW5hZ2VyIiwiV29ya2NlbnRlciBBZG1pbiBMZWFkIiwiREUgQ2VudHJhbCBCb2FyZCBBZG1pbiIsIkFkbWluIiwiRGV2ZWxvcG1lbnQgUGxhbiBBZG1pbiIsIkFGRVJCIFNQRUVEIFByb2dyYW0gTWFuYWdlciIsIkVGTVAgQ2FzZSBNYW5hZ2VtZW50IFVzZXIiLCJBRkVSQiBBRklULUNJIE1hbmFnZXIiLCJERSBBZG1pbiAtIFJlc2VydmUiLCJBRkVSQiBBRklUIEFjYWRlbWljIENvZGluZyBNYW5hZ2VyIiwiU3VydmV5IEFkbWluIiwiQXNzaWdubWVudCBUZWFtIiwiQUZQQyBTUEVFRCBBZG1pbiIsIkFGRVJCIEFGSVQtRU4gTWFuYWdlciIsIkNGTSIsIlNlbmlvciBMZWFkZXIgTWFuYWdlciIsIkFFVEMgQUZFUkIgQWRtaW4iLCJGdW5jdGlvbmFsIERUIEJvYXJkIEFkbWluIiwiUmVwb3J0aW5nIE1hbmFnZXIiLCJFZm1wX0Fzc2lnbm1lbnROYXZpZ2F0b3IiLCJTeXN0ZW0gQWRtaW4iLCJFRk1QIENlbnRyYWwgQ2VsbCBNYW5hZ2VtZW50IiwiVXNlciIsIkxvc2luZyBDb21tYW5kZXIiLCJBc3NpZ25tZW50IFRlYW0gTWFuYWdlbWVudCBMZXZlbCIsIkNvb3JkaW5hdGlvbnMgV29ya2Zsb3cgQWRtaW4iLCJNUEYgUmVsb2NhdGlvbnMgQWRtaW4iLCJBRkVSQiBQcm9ncmFtIE1hbmFnZXIiLCJXb3JrY2VudGVyIEFkbWluIiwiV29ya2NlbnRlciBVc2VyIiwiU3VydmV5IFNwYWNlIEFkbWluIl0sInBlcnNvbmlkIjoiMTAiLCJhdXRoZW50aWNhdGlvbm1ldGhvZHVzZWQiOiJJbXBlcnNvbmF0aW9uIiwic2Vzc2lvbmlkIjoiNmE2Y2Q1NDctOGQ5Ni00ZDAyLWIwMmItMDRjYTJmOTA0ZWE3IiwicGVyc29uaWRlbnRpZmllciI6ImQwNGM5ZGM3LWQyNWItNDg4Yy04YmVmLWExNDFiNzFhNWY1ZSIsImRvZGlkIjoiIiwibGFzdGxvZ2luZGF0ZSI6IjIwMjUtMDQtMjkgMTQ6Mjg6NDUgXHUwMDJCMDAiLCJoYXNncm91cHMiOiJ0cnVlIn0.cmAPGI0Q0MdBsUjx_OLBLYkwVXC-vkvfvd1ZlBiaZdQtFv_Fe8bVnElTQtO-n89wiq0XFfoaoD0P1oWmEnCH_u01WCJvXO-xl8sg0AyaocEWg0vaDLNdU1ShipcRYibDi-dSeipWq12-czZvqBSWQGbESsVfqfzs8vxA_QxYqg7Y7RUlL-5nY1NwM4M5x8g7nyvYsyZ-BpSxR3Xd1yaJnbYn2bzH4A9FoaPry7_hLxSxOCR01KDsGKr3z__ldq-cqzUTSBngXsHVgH8oaU8z_2tU2fyYowSCK7tWekDBSKd0jmv0avyDvHTCeO6Txz7ZydTNkkUoZ-mCTSxDNW6KzA';
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
        // set token once logged in
        // if token is not set, get token
        // Add the token to the request
        request = request.clone({
            setHeaders: { Authorization: this._token }
        });
        return next.handle(request);
    }
}